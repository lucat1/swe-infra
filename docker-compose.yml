version: "3.3"

networks:
  traefik:

services:
  traefik:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    command:
      - '--log.level=debug'
      - '--api.insecure=false'
      - '--pilot.dashboard=false'
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web-secure.address=:443"
      - "--entrypoints.web-secure.http3=true"
      - "--experimental.http3=true"
      - "--certificatesresolvers.default.acme.tlschallenge=true"
      - "--certificatesresolvers.default.acme.email=TODOCHANGEME@gmail.com"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik
  gitea:
    image: gitea/gitea
    container_name: gitea
    environment:
      - USER_UID=4000
      - USER_GID=4000
    restart: unless-stopped
    volumes:
      - ./data/gitea:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "22:22"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitea.rule=Host(`git.localhost`)"
      - "traefik.http.routers.gitea.entrypoints=web-secure"
      - "traefik.http.routers.gitea.tls.certresolver=default"
      - "traefik.http.services.gitea.loadbalancer.server.port=3000"
      - "traefik.http.middlewares.gitea_compress.compress=true"
      - "traefik.http.routers.gitea.middlewares=gitea_compress"
    networks:
      - traefik     

  woodpecker:
    image: woodpeckerci/woodpecker-server
    container_name: woodpecker
    restart: unless-stopped
    volumes:
      - ./data/woodpecker:/var/lib/woodpecker/
    environment:
      - WOODPECKER_OPEN=true
      - WOODPECKER_HOST=https://ci.localhost
      - WOODPECKER_GITEA=true
      - WOODPECKER_GITEA_URL=https://git.localhost
      - WOODPECKER_GITEA_CLIENT=TODO
      - WOODPECKER_GITEA_SECRET=TODO
      - WOODPECKER_AGENT_SECRET=TODO_SECRET
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.woodpecker.rule=Host(`ci.localhost`)"
      - "traefik.http.routers.woodpecker.entrypoints=web-secure"
      - "traefik.http.routers.woodpecker.tls.certresolver=default"
      - "traefik.http.services.woodpecker.loadbalancer.server.port=8000"
      - "traefik.http.middlewares.woodpecker_compress.compress=true"
      - "traefik.http.routers.woodpecker.middlewares=woodpecker_compress"
    networks:
      - traefik

  woodpecker-agent:
    image: woodpeckerci/woodpecker-agent
    container_name: woodpecker-agent
    command: agent
    restart: unless-stopped
    depends_on:
      - woodpecker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - WOODPECKER_SERVER=woodpecker:9000
      - WOODPECKER_AGENT_SECRET=TODO_SECRET
    networks:
      - traefik     

  # TODO: remove
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=mattermost
      - POSTGRES_PASSWORD=mattermost
      - POSTGRES_DB=mattermost
    networks:
      - traefik

  mattermost:
    # TODO: remove
    depends_on:
      - db
    image: mattermost/mattermost-team-edition
    container_name: mattermost
    restart: unless-stopped
    tmpfs:
      - /tmp
    volumes:
      - ./data/mattermost/config:/mattermost/config:rw
      - ./data/mattermost/data:/mattermost/data:rw
      - ./data/mattermost/logs:/mattermost/logs:rw
      - ./data/mattermost/plugins:/mattermost/plugins:rw
      - ./data/mattermost/client-plugins:/mattermost/client/plugins:rw
      - ./data/mattermost/bleve-indexes:/mattermost/bleve-indexes:rw
    environment:
      - TZ=Europe/Rome
      - MM_SQLSETTINGS_DRIVERNAME=postgres
      - MM_SQLSETTINGS_DATASOURCE=postgres://mattermost:mattermost@db:5432/mattermost?sslmode=disable&connect_timeout=10
      - MM_BLEVESETTINGS_INDEXDIR=/mattermost/bleve-indexes
      - MM_SERVICESETTINGS_SITEURL=https://chat.localhost
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mattermost.rule=Host(`chat.localhost`)"
      - "traefik.http.routers.mattermost.entrypoints=web-secure"
      - "traefik.http.routers.mattermost.tls.certresolver=default"
      - "traefik.http.services.mattermost.loadbalancer.server.port=8065"
      - "traefik.http.middlewares.mattermost_compress.compress=true"
      - "traefik.http.routers.mattermost.middlewares=mattermost_compress"
    networks:
      - traefik

  # TODO: remove
  db1:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarqube
      - POSTGRES_DB=sonarqube
    networks:
      - traefik

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - db1
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db1:5432/sonarqube
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: sonarqube
    volumes:
      - ./data/sonarqube/data:/opt/sonarqube/data
      - ./data/sonarqube/extensions:/opt/sonarqube/extensions
      - ./data/sonarqube/logs:/opt/sonarqube/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=Host(`qube.localhost`)"
      - "traefik.http.routers.sonarqube.entrypoints=web-secure"
      - "traefik.http.routers.sonarqube.tls.certresolver=default"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.sonarqube_compress.compress=true"
      - "traefik.http.routers.sonarqube.middlewares=sonarqube_compress"
    networks:
      - traefik
