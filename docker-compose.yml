version: "3.3"

networks:
  traefik:

services:
  traefik:
    image: traefik
    container_name: traefik
    restart: unless-stopped
    command:
      - '--log.level=debug'
      - '--api.insecure=false'
      - '--pilot.dashboard=false'
      - "--providers.docker=true"
      - "--providers.docker.network=traefik"
      - "--providers.docker.exposedbydefault=false"
      - "--entrypoints.web.address=:80"
      - "--entrypoints.web.http.redirections.entrypoint.to=web-secure"
      - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
      - "--entrypoints.web-secure.address=:443"
      - "--entrypoints.web-secure.http3=true"
      - "--experimental.http3=true"
      - "--certificatesresolvers.default.acme.tlschallenge=true"
      - "--certificatesresolvers.default.acme.email=TODOCHANGEME@gmail.com"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
    networks:
      - traefik
  gitlab:
    image: gitlab/gitlab-ee
    container_name: gitlab
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://git.localhost'
        nginx['listen_https'] = false
        nginx['listen_port'] = 80
        nginx['redirect_http_to_https'] = false
        letsencrypt['enable'] = false
    restart: unless-stopped
    volumes:
      - ./data/gitlab/config:/etc/gitlab
      - ./data/gitlab/log:/var/log/gitlab
      - ./data/gitlab/data:/var/opt/gitlab
    ports:
      - "22:22"
    shm_size: "256M"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.gitlab.rule=Host(`git.localhost`)"
      - "traefik.http.routers.gitlab.entrypoints=web-secure"
      - "traefik.http.routers.gitlab.tls.certresolver=default"
      - "traefik.http.services.gitlab.loadbalancer.server.port=80"
      - "traefik.http.middlewares.gitlab_compress.compress=true"
      - "traefik.http.routers.gitlab.middlewares=gitlab_compress"
    networks:
      - traefik     

  # TODO: remove
  db:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=mattermost
      - POSTGRES_PASSWORD=mattermost
      - POSTGRES_DB=mattermost
    networks:
      - traefik

  mattermost:
    # TODO: remove
    depends_on:
      - db
    image: mattermost/mattermost-team-edition
    container_name: mattermost
    restart: unless-stopped
    tmpfs:
      - /tmp
    volumes:
      - ./data/mattermost/config:/mattermost/config:rw
      - ./data/mattermost/data:/mattermost/data:rw
      - ./data/mattermost/logs:/mattermost/logs:rw
      - ./data/mattermost/plugins:/mattermost/plugins:rw
      - ./data/mattermost/client-plugins:/mattermost/client/plugins:rw
      - ./data/mattermost/bleve-indexes:/mattermost/bleve-indexes:rw
    environment:
      - TZ=Europe/Rome
      - MM_SQLSETTINGS_DRIVERNAME=postgres
      - MM_SQLSETTINGS_DATASOURCE=postgres://mattermost:mattermost@db:5432/mattermost?sslmode=disable&connect_timeout=10
      - MM_BLEVESETTINGS_INDEXDIR=/mattermost/bleve-indexes
      - MM_SERVICESETTINGS_SITEURL=https://chat.localhost
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.mattermost.rule=Host(`chat.localhost`)"
      - "traefik.http.routers.mattermost.entrypoints=web-secure"
      - "traefik.http.routers.mattermost.tls.certresolver=default"
      - "traefik.http.services.mattermost.loadbalancer.server.port=8065"
      - "traefik.http.middlewares.mattermost_compress.compress=true"
      - "traefik.http.routers.mattermost.middlewares=mattermost_compress"
    networks:
      - traefik

  # TODO: remove
  db1:
    image: postgres
    restart: always
    environment:
      - POSTGRES_USER=sonarqube
      - POSTGRES_PASSWORD=sonarqube
      - POSTGRES_DB=sonarqube
    networks:
      - traefik

  sonarqube:
    image: sonarqube:community
    container_name: sonarqube
    depends_on:
      - db1
    environment:
      SONAR_JDBC_URL: jdbc:postgresql://db1:5432/sonarqube
      SONAR_JDBC_USERNAME: sonarqube
      SONAR_JDBC_PASSWORD: sonarqube
    volumes:
      - ./data/sonarqube/data:/opt/sonarqube/data
      - ./data/sonarqube/extensions:/opt/sonarqube/extensions
      - ./data/sonarqube/logs:/opt/sonarqube/logs
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.sonarqube.rule=Host(`qube.localhost`)"
      - "traefik.http.routers.sonarqube.entrypoints=web-secure"
      - "traefik.http.routers.sonarqube.tls.certresolver=default"
      - "traefik.http.services.sonarqube.loadbalancer.server.port=9000"
      - "traefik.http.middlewares.sonarqube_compress.compress=true"
      - "traefik.http.routers.sonarqube.middlewares=sonarqube_compress"
    networks:
      - traefik


  # GitLab runners with Docker-in-Docker setup
  dind:
    image: docker:20-dind
    container_name: dind
    restart: unless-stopped
    privileged: true
    environment:
      DOCKER_TLS_CERTDIR: ""
    command:
      - --storage-driver=overlay2

  runner:
    image: registry.gitlab.com/gitlab-org/gitlab-runner:alpine
    container_name: runner
    restart: unless-stopped
    depends_on:
      - dind
    environment:
      - DOCKER_HOST=tcp://dind:2375
    volumes:
      - ./data/gitlab-runner:/etc/gitlab-runner

  register-runner:
    restart: "no"
    image: registry.gitlab.com/gitlab-org/gitlab-runner:alpine
    container_name: register-runner
    depends_on:
      - dind
    environment:
      - CI_SERVER_URL=https://git.localhost
      - REGISTRATION_TOKEN=TODO
    command:
      - register
      - --non-interactive
      - --locked=false
      - --name=runner-1
      - --executor=docker
      - --docker-image=docker:20-dind
      - --docker-volumes=/var/run/docker.sock:/var/run/docker.sock
    volumes:
      - ./data/gitlab-runner:/etc/gitlab-runner
