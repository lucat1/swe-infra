To change the GitLab root password:
```
docker-compose exec gitlab bash
gitlab-rake "gitlab:password:reset"
```
then follow the on-screen instructions.

Then:
- Disable user registration (https://git.teapot.ovh/admin/application_settings/general) then "Sign-up restrictions"
  - Restrict registration to emails ending in "@studio.unibo.it"
  - Require admin approval before registration is complete
- Set SonarQube Base URL (Configuration -> Base URL)
- Enble SonarQube SSO with GitLab (https://docs.sonarqube.org/latest/analysis/gitlab-integration/)
- Enble SonarQube-GitLab integration (https://docs.sonarqube.org/latest/analysis/gitlab-integration/)
- Enable the GitLab-Jenkins integration (https://docs.gitlab.com/ee/integration/jenkins.html)
- In Jenkins install the following plugins
  - gitlab-plugin: GitLab plugin for Jenkins - version 1.5.13 or later 
  - gitlab-oauth: GitLab Oauth for Jenkins (requires config for SSO, https://github.com/jenkinsci/gitlab-oauth-plugin/blob/master/docs/README.md)
  - sonar: SonarQube Scanner plugin for Jenkins - version 2.11 or later
- On Mattermost create a superuser account with a username different from 'root'
- Configure Mattermost for SSO with GitLab (under System console > Authentication > GitLab, https://chat.domain/admin_console/authentication/gitlab)
- Disable standard login from Mattermost:
  - System console > Email > Enable account creation with email: false
- Share the root account from GitLab to Mattermost
  - Login on GitLab as root
  - Login as root on Mattermost (normally) then go to System console > Users >
    Member on the right > Manage Roles > System Admin set the `root` (created from GitLab) account as Admin
- Disable non-SSO login in Mattermost
  - System console > Email > Enable sign-in with email: false
  - System console > Email > Enable sign-in with username: false
- Change taiga's admin password
  - `docker-compose exec -e POSTGRES_DB=taiga -e POSTGRES_USER=tuser -e POSTGRES_PASSWORD=$(cat taiga_password.txt) -e POSTGRES_HOST=postgres taiga_back bash`
  - `python manage.py`
- Create an .ssh/config with a host named backup pointing to your backup server.
