- name: Set rmem_max for HTTP3
  ansible.posix.sysctl:
    name: net.core.rmem_max
    value: '2500000'
    sysctl_set: yes

- name: Add Docker repo
  block:
    - name: Download the Docker key
      ansible.builtin.get_url:
        url: https://download.docker.com/linux/debian/gpg
        dest: /etc/apt/trusted.gpg.d/docker.asc

    - name: Add the Docker repository
      ansible.builtin.apt_repository:
        repo: 'deb [arch=amd64 signed-by=/etc/apt/trusted.gpg.d/docker.asc] https://download.docker.com/linux/debian {{ ansible_distribution_release }} stable'
        state: present

- name: Install Docker
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-compose
      - python3-docker
    state: latest
    update_cache: yes

- name: Read Mattermost PostgreSQL password
  block:
  - name: Read the file
    ansible.builtin.slurp:
      src: /swe/mattermost_password.txt
    register: mattermost_password_base
  - name: Decode the variable
    set_fact:
      mattermost_password: "{{ mattermost_password_base.content | b64decode }}"

- name: Read SonarQube PostgreSQL password
  block:
  - name: Read the file
    ansible.builtin.slurp:
      src: /swe/sonarqube_password.txt
    register: sonarqube_password_base
  - name: Decode the variable
    set_fact:
      sonarqube_password: "{{ sonarqube_password_base.content | b64decode }}"

- name: Read Taiga PostgreSQL password
  block:
  - name: Read the file
    ansible.builtin.slurp:
      src: /swe/taiga_password.txt
    register: taiga_password_base
  - name: Decode the variable
    set_fact:
      taiga_password: "{{ taiga_password_base.content | b64decode }}"

- name: Read Taiga secret
  block:
  - name: Read the file
    ansible.builtin.slurp:
      src: /swe/taiga_secret.txt
    register: taiga_secret_base
  - name: Decode the variable
    set_fact:
      taiga_secret: "{{ taiga_secret_base.content | b64decode }}"

- name: Find the docker binary
  ansible.builtin.command: which docker
  register: docker_bin

- name: Copy Docker compose
  ansible.builtin.template:
    src: ../docker-compose.yml.j2
    dest: /swe/docker-compose.yml
    owner: root
    mode: '0700'

- name: Restart and enable Docker
  ansible.builtin.service:
    name: docker
    state: restarted
    enabled: yes

- name: Run 'docker-compose up'
  community.docker.docker_compose:
    project_src: /swe/
    remove_orphans: true
  register: docker_compose_output

- name: Print docker compose output
  ansible.builtin.debug:
    var: docker_compose_output
