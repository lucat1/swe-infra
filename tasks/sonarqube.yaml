- name: Set max_map_count
  ansible.posix.sysctl:
    name: vm.max_map_count
    value: '262144'
    sysctl_set: yes

- name: Check if sonarqube_password.txt exists
  ansible.builtin.stat:
    path: /swe/sonarqube_password.txt
  register: sonarqube_password_file

- name: Generate the password for the SonarQube PostgresSQL database
  block:
  - name: Generate random password for Sonarqube PostgresSQL database
    ansible.builtin.set_fact:
      sonarqube_db_password: "{{ lookup('ansible.builtin.password', '/dev/null') }}"
  - name: Create a file for SonarQube DB password
    ansible.builtin.file:
      path: /swe/sonarqube.txt
      state: touch
      mode: '0700'
      owner: root
  - name: Write Sonarqube DB password to a file
    ansible.builtin.copy:
      content: "{{ sonarqube_db_password }}"
      dest: /swe/sonarqube_password.txt
  when: not sonarqube_password_file.stat.exists

- name: Read the password for the SonarQube PostgresSQL database
  block:
  - name: Read the file
    ansible.builtin.slurp:
      src: /swe/sonarqube_password.txt
    register: sonarqube_db_password_base
  - name: Decode the variable
    set_fact:
      sonarqube_db_password: "{{ sonarqube_db_password_base.content | b64decode }}"
  when: sonarqube_password_file.stat.exists

- name: Create the SonarQube PostgresSQL database
  become: yes
  become_user: postgres
  community.postgresql.postgresql_db:
    name: sonarqube
    encoding: UTF-8
    lc_collate: en_US.UTF-8 # TODO check with locale -a
    lc_ctype: en_US.UTF-8
    template: template0

- name: Create the SonarQube PostgresSQL user
  become: yes
  become_user: postgres
  community.postgresql.postgresql_user:
    name: squser
    password: '{{ sonarqube_db_password }}'

- name: GRANT ALL PRIVILEGES ON DATABASE sonarqube TO squser
  become: yes
  become_user: postgres
  community.postgresql.postgresql_privs:
    db: postgres
    privs: ALL
    type: database
    obj: sonarqube
    role: squser

- name: Restart PostgresSQL
  ansible.builtin.service:
    name: postgresql
    state: restarted
